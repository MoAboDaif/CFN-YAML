AWSTemplateFormatVersion: '2010-09-09'

Description: VPC CloudFormation Template

Resources:
  MyVPC01:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.10.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-${AWS::Region}-vpc
  MyPublicSbnt0:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC01
      CidrBlock: 10.10.0.0/20
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select
        - 0
        - !GetAZs ''
      Tags:
        - Key: Name
          Value: !Sub PublicSbnt0-${AWS::Region}a
  MyPublicSbnt1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC01
      CidrBlock: 10.10.16.0/20
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select
        - 1
        - !GetAZs ''
      Tags:
        - Key: Name
          Value: !Sub PublicSbnt1-${AWS::Region}b
  MyPublicSbnt2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC01
      CidrBlock: 10.10.32.0/20
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select
        - 2
        - !GetAZs ''
      Tags:
        - Key: Name
          Value: !Sub PublicSbnt1-${AWS::Region}c
  MyPrivateSbnt0:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC01
      CidrBlock: 10.10.48.0/20
      MapPublicIpOnLaunch: false
      AvailabilityZone: !Select
        - 0
        - !GetAZs ''
      Tags:
        - Key: Name
          Value: !Sub PrivateSbnt0-${AWS::Region}a
  MyPrivateSbnt1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC01
      CidrBlock: 10.10.64.0/20
      MapPublicIpOnLaunch: false
      AvailabilityZone: !Select
        - 1
        - !GetAZs ''
      Tags:
        - Key: Name
          Value: !Sub PrivateSbnt1-${AWS::Region}b
  MyIGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub igw-${AWS::Region}
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref MyVPC01
      InternetGatewayId: !Ref MyIGW
  PublicRoutTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyVPC01
      Tags:
        - Key: Name
          Value: !Sub rtbl-public-${AWS::Region}
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRoutTable
      GatewayId: !Ref MyIGW
      DestinationCidrBlock: 0.0.0.0/0
  AssignPublicRoutTable0:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRoutTable
      SubnetId: !Ref MyPublicSbnt0
  AssignPublicRoutTable1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRoutTable
      SubnetId: !Ref MyPublicSbnt1
  AssignPublicRoutTable2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRoutTable
      SubnetId: !Ref MyPublicSbnt2
  PrivateRoutTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyVPC01
      Tags:
        - Key: Name
          Value: !Sub rtbl-Private-${AWS::Region}

  AssignPrivateRoutTable0:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRoutTable
      SubnetId: !Ref MyPrivateSbnt0
  AssignPrivateRoutTable1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRoutTable
      SubnetId: !Ref MyPrivateSbnt1
  WebSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: http and https
      VpcId: !Ref MyVPC01
      SecurityGroupIngress:
        - IpProtocol: '-1'
          CidrIp: 0.0.0.0/0
  AppSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    DependsOn:
         - WebSecurityGroup
    Properties:
      GroupDescription: Instance GateWay Access
      VpcId: !Ref MyVPC01
      SecurityGroupIngress:
        - IpProtocol: '-1'
          SourceSecurityGroupId: !Ref WebSecurityGroup

Outputs:
  MyVPCID:
    Description: My VPC ID
    Value: !Ref MyVPC01